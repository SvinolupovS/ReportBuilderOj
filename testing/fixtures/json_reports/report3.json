[
  {
    "uri": "features/feature3.feature",
    "id": "i-am-some-other-feature-for-testing-some-broken-functionality",
    "keyword": "Feature",
    "name": "I am some other feature for testing some broken functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-failed-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some failed testing scenario of some functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 3
          },
          {
            "name": "@screenshot",
            "line": 3
          }
        ],
        "before": [
          {
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 4646920000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "embeddings": [
              {
                "mime_type": "text/html",
                "data": "PGk+U3RlcCBFbWJlZCBIVE1MPC9pPg=="
              }
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 248000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 504696000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step which will fail",
            "line": 6,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:27"
            },
            "result": {
              "status": "failed",
              "error_message": "I am some error (RuntimeError)\n./features/step_definitions/sample_steps.rb:28:in `/^I am when step which will fail$/'\nfeatures/feature3.feature:6:in `When I am when step which will fail'",
              "duration": 252000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:9"
            },
            "result": {
              "status": "skipped"
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 3274592000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-undefined-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some undefined testing scenario of some functionality",
        "description": "",
        "line": 10,
        "type": "scenario",
        "tags": [
          {
            "name": "@wip",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 59000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 51000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 503511000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 12,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:16"
            },
            "result": {
              "status": "passed",
              "duration": 161000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 505455000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some undefined feature",
            "line": 13,
            "match": {
              "location": "features/feature3.feature:13"
            },
            "result": {
              "status": "undefined"
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 36000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-pending-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some pending testing scenario of some functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 15
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 53000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 31000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 504136000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 18,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:16"
            },
            "result": {
              "status": "passed",
              "duration": 64000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 501345000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some pending feature",
            "line": 19,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:23"
            },
            "result": {
              "status": "pending",
              "error_message": "TODO (Cucumber::Pending)\n./features/step_definitions/sample_steps.rb:24:in `/^I am then step of some pending feature$/'\nfeatures/feature3.feature:19:in `Then I am then step of some pending feature'",
              "duration": 266000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 34000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 22,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 21
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 44000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 23,
            "embeddings": [
              {
                "mime_type": "text/html",
                "data": "PGk+U3RlcCBFbWJlZCBIVE1MPC9pPg=="
              }
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 75000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 502519000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 24,
            "output": [
              "$ ABC % XYZ £"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:5"
            },
            "result": {
              "status": "passed",
              "duration": 75000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 504680000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 25,
            "embeddings": [
              {
                "mime_type": "text/plain",
                "data": "RW1iZWQgTGlua3x8fGh0dHA6Ly9yZXBvcnRidWlsZGVyLnJhamF0dGhhcmVqYS5jb20="
              }
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 157000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 504060000
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 40000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 28,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 27
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 55000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 29,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 37000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 500831000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 30,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:16"
            },
            "result": {
              "status": "passed",
              "duration": 139000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 501633000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 31,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:20"
            },
            "result": {
              "status": "passed",
              "duration": 84000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 503487000
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 39000
            }
          }
        ]
      }
    ]
  }
]